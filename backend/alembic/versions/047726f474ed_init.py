"""init

Revision ID: 047726f474ed
Revises:
Create Date: 2025-08-28 21:01:13.769556

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "047726f474ed"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False, comment="Unique user identifier"),
        sa.Column(
            "email",
            sa.String(length=255),
            nullable=False,
            comment="User's email address for login",
        ),
        sa.Column(
            "hashed_password",
            sa.String(length=255),
            nullable=False,
            comment="Bcrypt hashed password",
        ),
        sa.Column(
            "display_name",
            sa.String(length=100),
            nullable=True,
            comment="User's display name",
        ),
        sa.Column(
            "first_name",
            sa.String(length=50),
            nullable=True,
            comment="User's first name",
        ),
        sa.Column(
            "last_name", sa.String(length=50), nullable=True, comment="User's last name"
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=False,
            comment="Whether the user account is active",
        ),
        sa.Column(
            "is_verified",
            sa.Boolean(),
            nullable=False,
            comment="Whether the user's email is verified",
        ),
        sa.Column(
            "is_superuser",
            sa.Boolean(),
            nullable=False,
            comment="Whether the user has admin privileges",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Account creation timestamp",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Last profile update timestamp",
        ),
        sa.Column(
            "last_login",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Last successful login timestamp",
        ),
        sa.Column(
            "bio", sa.Text(), nullable=True, comment="User's biographical information"
        ),
        sa.Column(
            "avatar_url",
            sa.String(length=500),
            nullable=True,
            comment="URL to user's profile picture",
        ),
        sa.Column(
            "failed_login_attempts",
            sa.Integer(),
            nullable=False,
            comment="Count of failed login attempts",
        ),
        sa.Column(
            "last_failed_login",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Timestamp of last failed login attempt",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("idx_users_active", ["is_active"], unique=False)
        batch_op.create_index(
            "idx_users_active_verified", ["is_active", "is_verified"], unique=False
        )
        batch_op.create_index("idx_users_created_at", ["created_at"], unique=False)
        batch_op.create_index("idx_users_display_name", ["display_name"], unique=False)
        batch_op.create_index("idx_users_email", ["email"], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index("idx_users_email")
        batch_op.drop_index("idx_users_display_name")
        batch_op.drop_index("idx_users_created_at")
        batch_op.drop_index("idx_users_active_verified")
        batch_op.drop_index("idx_users_active")

    op.drop_table("users")
    # ### end Alembic commands ###
